"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/todos/todos.tsx":
/*!********************************************!*\
  !*** ./src/app/components/todos/todos.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n\n// const cookiesClient = generateServerClientUsingCookies({\n//   config,\n//   cookies\n// });\n// async function createTodo(formData: FormData) {\n//   const { data } = await cookiesClient.graphql({\n//     query: mutations.createTodo,\n//     variables: {\n//       input: {\n//         name: formData.get('name')?.toString() ?? ''\n//       }\n//     }\n//   });\n//   console.log('Created Todo: ', data?.createTodo);\n//   revalidatePath('/');\n// }\nconst Todos = ()=>{\n    // 2. Fetch additional todos\n    //async function  allTodo(){\n    // const { data, errors } = await cookiesClient.graphql({\n    //   query: queries.listTodos\n    // });\n    // const todos = data.listTodos.items;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: \"kokos\"\n    }, void 0, false);\n// }\n//return allTodo()\n};\n_c = Todos;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Todos);\nvar _c;\n$RefreshReg$(_c, \"Todos\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvY29tcG9uZW50cy90b2Rvcy90b2Rvcy50c3giLCJtYXBwaW5ncyI6Ijs7O0FBV0EsMkRBQTJEO0FBQzNELFlBQVk7QUFDWixZQUFZO0FBQ1osTUFBTTtBQUdOLGtEQUFrRDtBQUNsRCxtREFBbUQ7QUFDbkQsbUNBQW1DO0FBQ25DLG1CQUFtQjtBQUNuQixpQkFBaUI7QUFDakIsdURBQXVEO0FBQ3ZELFVBQVU7QUFDVixRQUFRO0FBQ1IsUUFBUTtBQUVSLHFEQUFxRDtBQUVyRCx5QkFBeUI7QUFDekIsSUFBSTtBQUlKLE1BQU1BLFFBQVE7SUFDWiw0QkFBNEI7SUFDNUIsNEJBQTRCO0lBQzFCLHlEQUF5RDtJQUN6RCw2QkFBNkI7SUFDN0IsTUFBTTtJQUVOLHNDQUFzQztJQUV0QyxxQkFDRTtrQkFBRTs7QUE2QlAsSUFBSTtBQUNKLGtCQUFrQjtBQUVuQjtLQTFDTUE7QUE0Q04sK0RBQWVBLEtBQUtBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9jb21wb25lbnRzL3RvZG9zL3RvZG9zLnRzeD81Njk5Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQgeyBnZW5lcmF0ZVNlcnZlckNsaWVudFVzaW5nQ29va2llcyB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9hZGFwdGVyLW5leHRqcy9hcGknO1xuaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XG5pbXBvcnQgeyByZXZhbGlkYXRlUGF0aCB9IGZyb20gJ25leHQvY2FjaGUnO1xuaW1wb3J0ICogYXMgbXV0YXRpb25zIGZyb20gJ0AvZ3JhcGhxbC9tdXRhdGlvbnMnO1xuLy8gMS4gQWRkIHRoZSBxdWVyaWVzIGFzIGFuIGltcG9ydFxuaW1wb3J0ICogYXMgcXVlcmllcyBmcm9tICdAL2dyYXBocWwvcXVlcmllcyc7XG5cbmltcG9ydCBjb25maWcgZnJvbSAnQC9hbXBsaWZ5Y29uZmlndXJhdGlvbi5qc29uJztcblxuLy8gY29uc3QgY29va2llc0NsaWVudCA9IGdlbmVyYXRlU2VydmVyQ2xpZW50VXNpbmdDb29raWVzKHtcbi8vICAgY29uZmlnLFxuLy8gICBjb29raWVzXG4vLyB9KTtcblxuXG4vLyBhc3luYyBmdW5jdGlvbiBjcmVhdGVUb2RvKGZvcm1EYXRhOiBGb3JtRGF0YSkge1xuLy8gICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IGNvb2tpZXNDbGllbnQuZ3JhcGhxbCh7XG4vLyAgICAgcXVlcnk6IG11dGF0aW9ucy5jcmVhdGVUb2RvLFxuLy8gICAgIHZhcmlhYmxlczoge1xuLy8gICAgICAgaW5wdXQ6IHtcbi8vICAgICAgICAgbmFtZTogZm9ybURhdGEuZ2V0KCduYW1lJyk/LnRvU3RyaW5nKCkgPz8gJydcbi8vICAgICAgIH1cbi8vICAgICB9XG4vLyAgIH0pO1xuXG4vLyAgIGNvbnNvbGUubG9nKCdDcmVhdGVkIFRvZG86ICcsIGRhdGE/LmNyZWF0ZVRvZG8pO1xuXG4vLyAgIHJldmFsaWRhdGVQYXRoKCcvJyk7XG4vLyB9XG5cblxuXG5jb25zdCBUb2RvcyA9ICgpPT4ge1xuICAvLyAyLiBGZXRjaCBhZGRpdGlvbmFsIHRvZG9zXG4gIC8vYXN5bmMgZnVuY3Rpb24gIGFsbFRvZG8oKXtcbiAgICAvLyBjb25zdCB7IGRhdGEsIGVycm9ycyB9ID0gYXdhaXQgY29va2llc0NsaWVudC5ncmFwaHFsKHtcbiAgICAvLyAgIHF1ZXJ5OiBxdWVyaWVzLmxpc3RUb2Rvc1xuICAgIC8vIH0pO1xuICBcbiAgICAvLyBjb25zdCB0b2RvcyA9IGRhdGEubGlzdFRvZG9zLml0ZW1zO1xuICBcbiAgICByZXR1cm4gKFxuICAgICAgPD5rb2tvczwvPlxuICAgICAgLy8gPGRpdlxuICAgICAgLy8gICBzdHlsZT17e1xuICAgICAgLy8gICAgIG1heFdpZHRoOiAnNTAwcHgnLFxuICAgICAgLy8gICAgIG1hcmdpbjogJzAgYXV0bycsXG4gICAgICAvLyAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgIC8vICAgICBtYXJnaW5Ub3A6ICcxMDBweCdcbiAgICAgIC8vICAgfX1cbiAgICAgIC8vID5cbiAgICAgIC8vICAgPGZvcm0gYWN0aW9uPXtjcmVhdGVUb2RvfT5cbiAgICAgIC8vICAgICA8aW5wdXQgbmFtZT1cIm5hbWVcIiBwbGFjZWhvbGRlcj1cIkFkZCBhIHRvZG9cIiAvPlxuICAgICAgLy8gICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiPkFkZDwvYnV0dG9uPlxuICAgICAgLy8gICA8L2Zvcm0+XG4gIFxuICAgICAgLy8gICB7LyogMy4gSGFuZGxlIGVkZ2UgY2FzZXMgJiB6ZXJvIHN0YXRlICYgZXJyb3Igc3RhdGVzKi99XG4gICAgICAvLyAgIHsoIXRvZG9zIHx8IHRvZG9zLmxlbmd0aCA9PT0gMCB8fCBlcnJvcnMpICYmIChcbiAgICAgIC8vICAgICA8ZGl2PlxuICAgICAgLy8gICAgICAgPHA+Tm8gdG9kb3MsIHBsZWFzZSBhZGQgb25lLjwvcD5cbiAgICAgIC8vICAgICA8L2Rpdj5cbiAgICAgIC8vICAgKX1cbiAgXG4gICAgICAvLyAgIHsvKiA0LiBEaXNwbGF5IHRvZG9zKi99XG4gICAgICAvLyAgIDx1bD5cbiAgICAgIC8vICAgICB7dG9kb3MubWFwKCh0b2RvKSA9PiB7XG4gICAgICAvLyAgICAgICByZXR1cm4gPGxpIHN0eWxlPXt7IGxpc3RTdHlsZTogJ25vbmUnIH19Pnt0b2RvLm5hbWV9PC9saT47XG4gICAgICAvLyAgICAgfSl9XG4gICAgICAvLyAgIDwvdWw+XG4gICAgICAvLyA8L2Rpdj5cbiAgICApO1xuIC8vIH1cbiAvL3JldHVybiBhbGxUb2RvKClcbiBcbn1cblxuZXhwb3J0IGRlZmF1bHQgVG9kb3MiXSwibmFtZXMiOlsiVG9kb3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/todos/todos.tsx\n"));

/***/ })

});